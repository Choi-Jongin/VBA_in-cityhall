
Public Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As LongPtr)
Public dropspeed As Double
'새 게임
Sub NewGame()

    Dim starttime As Double
    Dim curttime As Double
    Dim NumOfSeconds As Double
    Dim elapstime As Double
    Dim GameState As String
    
    
    GameState = "play"
    Cells(27, 1).Value = 0
    Cells(25, 1).Value = GameState
    dropspeed = 0.3
    
    Range("AT36:BW60").ClearContents

    If GameState = "play" Then
        NewBlock
    
        elapstime = 0
        interval = 0.033
        
        starttime = Timer
        
        'mainloop
        Do While elapstime < 100000
        
            If StrComp(Cells(25, 1).Value, "play", vbTextCompare) <> 0 Then
                Exit Do
            End If
            
            Do Until curttime >= interval + starttime
                curttime = Timer
                DoEvents
            Loop
            
            elapstime = elapstime + (curttime - starttime) * 1000
                        
            'Do something
            controller.elapslabel.Caption = "시간 : " & (elapstime / 1000)
            
            Cells(46, 46).Value = Cells(46, 46).Value + (curttime - starttime)
            
            If Cells(46, 46).Value > dropspeed Then
            
                Drop
                Cells(27, 1).Value = Cells(27, 1).Value + 100
                Cells(46, 46).Value = Cells(46, 46).Value - dropspeed
            End If
            
            
            'refresh
            Range("ba37:bj60").ClearContents
            blockr = Cells(45, 46).Value
            blockc = Cells(45, 47).Value
            For r = 1 To 4
                For c = 1 To 4
                    Cells(40 + r + blockr, 52 + c + blockc).Value = Cells(40 + Cells(45, 48).Value * 5 + r, 10 + Cells(45, 49).Value * 5 + c).Value
                Next c
            Next r
        
            starttime = starttime + interval
        Loop
    End If

End Sub

Sub SleepFor(NumOfSeconds As Single)

    Dim SngSec As Single

    SngSec = Timer + NumOfSeconds

    Do While Timer < SngSec
        DoEvents
    Loop

    SngSec = -Timer
End Sub
'새로운 블록을 만듬
Sub NewBlock()
        
    randr = Int(Rnd() * 7)
    randc = Int(Rnd() * 4)
    
    For i = 1 To 4
        For j = 1 To 4
            Cells(40 + i, 45 + j).Value = Cells(40 + i + randr * 5, 10 + j + randc * 5).Value
        Next j
    Next i
    
    '블록정보 기록
    Cells(45, 46).Value = -3
    Cells(45, 47).Value = 3
    Cells(45, 48).Value = randr
    Cells(45, 49).Value = randc
    


End Sub

'블록이 바닥에 담
Sub EndBlock()

    '블록좌표
    blockr = Cells(45, 46).Value
    blockc = Cells(45, 47).Value
    
    If blockr >= 0 And Cells(45, 46).Value <> "" Then
    
    '블록을 등록?시킴
    For i = 1 To 4
        For j = 1 To 4
            If Cells(40 + blockr + i, 65 + blockc + j).Value = "" Then
                Cells(40 + blockr + i, 65 + blockc + j).Value = Cells(40 + Cells(45, 48).Value * 5 + i, 10 + Cells(45, 49).Value * 5 + j).Value
            End If
            Cells(40 + i + blockr, 52 + j + blockc).Value = ""
        Next j
    Next i
    
    Else
    
        Cells(25, 1).Value = "over"
    
    End If
    
    ClearLine

End Sub
'블록을 아래로 한행 내림
Sub Drop()

    blockr = Cells(45, 46).Value
    blockc = Cells(45, 47).Value
    
'   Range("ba37:bj60").ClearContents
    
    
'    For i = 1 To 4
 '       For j = 1 To 4
  '          Cells(40 + i + blockr, 52 + j + blockc).Value = ""
   '     Next j
    'Next i
        
    If Overlap(blockr + 1, blockc, Cells(45, 48).Value, Cells(45, 49).Value) Then
        
        EndBlock
        If Cells(25, 1).Value = "over" Then
        
        Else
            NewBlock
        End If
    Else
    
        Cells(45, 46).Value = Cells(45, 46).Value + 1
'        blockr = blockr + 1
'        For i = 1 To 4
'            For j = 1 To 4
'                Cells(40 + i + blockr, 52 + j + blockc).Value = Cells(40 + Cells(45, 48).Value * 5 + i, 10 + Cells(45, 49).Value * 5 + j).Value
'            Next j
'        Next i

    End If
    
End Sub
'블록충돌
Function Overlap(blockr, blockc, kind, dir)
    
    lenth = 4
    For i = 1 To 4
        If (Cells(40 + kind * 5 + i, 10 + dir * 5 + 1).Value = "") And (Cells(40 + kind * 5 + i, 10 + dir * 5 + 2).Value = "") And (Cells(40 + kind * 5 + i, 10 + dir * 5 + 3).Value = "") And (Cells(40 + kind * 5 + i, 10 + dir * 5 + 4).Value = "") Then
            lenth = i - 1
            Exit For
        End If
    Next i
    
    If blockr > 16 + (4 - lenth) Then
        Overlap = True
        Exit Function
    End If
    
    For i = 1 To 4
        For j = 1 To 4
            If Cells(40 + blockr + i, 65 + blockc + j).Value <> "" And Cells(40 + kind * 5 + i, 10 + dir * 5 + j).Value <> "" Then
                Overlap = True
                Exit Function
            End If
        Next j
    Next i
    
    Dim margin(5) As Integer
    For i = 1 To 4
        margin(i) = 0
        If (Cells(40 + kind * 5 + 1, 10 + dir * 5 + i).Value = "") And (Cells(40 + kind * 5 + 2, 10 + dir * 5 + i).Value = "") And (Cells(40 + kind * 5 + 3, 10 + dir * 5 + i).Value = "") And (Cells(40 + kind * 5 + 4, 10 + dir * 5 + i).Value = "") Then
            margin(i) = 1
        End If
    Next i
    
    If blockc + margin(1) + margin(2) < 0 Then
        Overlap = True
        Exit Function
    End If
    
    If blockc > 6 + margin(3) + margin(4) Then
        Overlap = True
        Exit Function
    End If
    
    
    
    Overlap = False
    
End Function
'회전
Function MoveBlock(dir)  ' 0:좌, 1:우, 2:하단, 3:최하단
    
    blockr = Cells(45, 46).Value
    blockc = Cells(45, 47).Value
    
    Select Case dir
    Case 0
        If Overlap(blockr, blockc - 1, Cells(45, 48).Value, Cells(45, 49).Value) = False Then
            Cells(45, 47).Value = Cells(45, 47).Value - 1
        End If
    Case 1
        If Overlap(blockr, blockc + 1, Cells(45, 48).Value, Cells(45, 49).Value) = False Then
            Cells(45, 47).Value = Cells(45, 47).Value + 1
        End If
    Case 2
    If Overlap(blockr + 1, blockc, Cells(45, 48).Value, Cells(45, 49).Value) = False Then
            Cells(45, 46).Value = Cells(45, 46).Value + 1
        End If
    Case 3
    
        Do Until Overlap(blockr + 1, blockc, Cells(45, 48).Value, Cells(45, 49).Value)
            Cells(45, 46).Value = blockr + 1
        blockr = Cells(45, 46).Value
    Loop
       
    
    End Select
    

End Function
Function RotateBlock(dir)  ' 0:반시계 방향, 1:시계방향

    blockr = Cells(45, 46).Value
    blockc = Cells(45, 47).Value
    
    rotate = Cells(45, 49).Value
    
    Select Case dir
    Case 0
        rotate = rotate - 1
        If rotate < 0 Then
            rotate = 3
        End If
    Case 1
        rotate = rotate + 1
        If rotate > 3 Then
            rotate = 0
        End If
    End Select
        
    If Overlap(blockr, blockc, Cells(45, 48).Value, rotate) = False Then
        Cells(45, 49).Value = rotate
    End If
    If Overlap(blockr + 1, blockc, Cells(45, 48).Value, rotate) = True Then
        Cells(46, 46).Value = 0
    End If

End Function

Function ClearLine()
    
    Dim line As Integer
    line = 0
    
    For i = 20 To 1 Step -1
        Dim full As Boolean
        full = True
        For Each cell In Range(Cells(40 + i, 66), Cells(40 + i, 75))
            If cell.Value = "" Then
                full = False
                Exit For
            End If
        Next cell
        If full Then
            line = line + 1
            Range(Cells(40 + i, 66), Cells(40 + i, 75)).ClearContents
            SleepFor (0.1)
            Cells(46, 46).Value = Cells(46, 46).Value - 0.1
            For j = i To 1 Step -1
            
'            Range(Cells(40 + j, 66), Cells(40 + j, 75)).vlaue = Range(Cells(40 + j - 1, 66), Cells(40 + j - 1, 75)).Value'
                For k = 1 To 10
                    Cells(40 + j, 65 + k).Value = Cells(40 + j - 1, 65 + k).Value
                Next k
            Next j
            i = i + 1
        End If
    Next i
    
    ClearLine = line

End Function

Sub showcontroller()

    controller.Show

End Sub

